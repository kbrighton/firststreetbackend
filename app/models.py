# coding: utf-8
from flask_login import UserMixin
from sqlalchemy import Identity
from werkzeug.security import generate_password_hash, check_password_hash

from app.extensions import db, login


class Customer(db.Model):
    __tablename__ = 'Customers'

    id = db.Column(db.Integer, Identity(), primary_key=True, nullable=False)
    cust_id = db.Column('CUSTID', db.String(255), unique=True, index=True)  # Changed from primary_key to unique
    customer_id = db.Column('Customer ID', db.String(255))
    customer = db.Column('Customer', db.String(255))
    address_line_1 = db.Column('Address Line 1', db.String(255))
    address_line_2 = db.Column('Address Line 2', db.String(255))
    city = db.Column('City', db.String(255))
    state = db.Column('State', db.String(255))
    zip = db.Column('Zip', db.String(255))
    bill_to_contact = db.Column('Bill To Contact', db.String(255))
    telephone_1 = db.Column('Telephone 1', db.String(255))
    telephone_2 = db.Column('Telephone 2', db.String(255))
    fax_number = db.Column('Fax Number', db.String(255))
    tax_id = db.Column('Tax ID', db.String(255))
    resale_no = db.Column('Resale No', db.String(255))
    cust_since = db.Column('Cust Since', db.DateTime(True))
    ship_to_1_address_line_1 = db.Column('Ship to 1 Address Line 1', db.String(255))
    ship_to_1_address_line_2 = db.Column('Ship to 1 Address Line 2', db.String(255))
    ship_to_1_city = db.Column('Ship to 1 City ', db.String(255))
    ship_to_1_state = db.Column('Ship to 1 State ', db.String(255))
    ship_to_1_zip = db.Column('Ship to 1 Zip ', db.String(255))
    customer_email = db.Column('Customer E-mail', db.String(255))
    created_at = db.Column(db.DateTime, default=db.func.current_timestamp())
    updated_at = db.Column(db.DateTime, default=db.func.current_timestamp(), 
                          onupdate=db.func.current_timestamp())

    def __repr__(self):
        return f'<Customer "{self.customer}">'


class Order(db.Model):
    __tablename__ = 'Orders'

    id = db.Column(db.Integer, Identity(), primary_key=True, nullable=False)
    log = db.Column('LOG', db.String(7), unique=True, index=True)
    cust = db.Column('CUST', db.String(5), index=True)
    cust_p_0 = db.Column('CUST_P_0', db.String(8))
    prior = db.Column('PRIOR', db.String(1))
    shipout = db.Column('SHIPOUT', db.String(5))
    howship = db.Column('HOWSHIP', db.String(5))
    weight = db.Column('WEIGHT', db.Float(53))
    artlo = db.Column('ARTLO', db.String(5))
    datin = db.Column('DATIN', db.Date)
    artout = db.Column('ARTOUT', db.Date)
    dueout = db.Column('DUEOUT', db.Date)
    logtype = db.Column('LOGTYPE', db.String(5))
    datout = db.Column('DATOUT', db.Date)
    colorf = db.Column('COLORF', db.Float(53))
    inktyp = db.Column('INKTYP', db.Float(53))
    colori = db.Column('COLORI', db.Float(53))
    print_n = db.Column('PRINT_N', db.Float(53))
    rush_n = db.Column('RUSH_N', db.Float(53))
    colorc_n = db.Column('COLORC_N', db.Float(53))
    gang_n = db.Column('GANG_N', db.Float(53))
    artc_n = db.Column('ARTC_N', db.Float(53))
    appl_n = db.Column('APPL_N', db.Float(53))
    adhes_n = db.Column('ADHES_N', db.Float(53))
    let_nu_n = db.Column('LET_NU_N', db.Float(53))
    garmnt_n = db.Column('GARMNT_N', db.Float(53))
    print_c = db.Column('PRINT_C', db.Float(53))
    rush_c = db.Column('RUSH_C', db.Float(53))
    colorc_c = db.Column('COLORC_C', db.Float(53))
    gang_c = db.Column('GANG_C', db.Float(53))
    artc_c = db.Column('ARTC_C', db.Float(53))
    appl_c = db.Column('APPL_C', db.Float(53))
    adhes_c = db.Column('ADHES_C', db.Float(53))
    let_nu_c = db.Column('LET_NU_C', db.Float(53))
    garmnt_c = db.Column('GARMNT_C', db.Float(53))
    print_t = db.Column('PRINT_T', db.Float(53))
    rush_t = db.Column('RUSH_T', db.Float(53))
    colorc_t = db.Column('COLORC_T', db.Float(53))
    gang_t = db.Column('GANG_T', db.Float(53))
    artc_t = db.Column('ARTC_T', db.Float(53))
    appl_t = db.Column('APPL_T', db.Float(53))
    adhes_t = db.Column('ADHES_T', db.Float(53))
    let_nu_t = db.Column('LET_NU_T', db.Float(53))
    garmnt_t = db.Column('GARMNT_T', db.Float(53))
    subtotal = db.Column('SUBTOTAL', db.Float(53))
    sales_tax = db.Column('SALES_TAX', db.Float(53))
    ship_frght = db.Column('SHIP_FRGHT', db.Float(53))
    total = db.Column('TOTAL', db.Float(53))
    art_1 = db.Column('ART_1', db.String(5))
    art_2 = db.Column('ART_2', db.String(5))
    art_3 = db.Column('ART_3', db.String(5))
    art_4 = db.Column('ART_4', db.String(5))
    art_5 = db.Column('ART_5', db.String(5))
    art_6 = db.Column('ART_6', db.String(5))
    art_7 = db.Column('ART_7', db.String(5))
    art_8 = db.Column('ART_8', db.String(5))
    art_9 = db.Column('ART_9', db.String(5))
    print_1 = db.Column('PRINT_1', db.String(5))
    print_2 = db.Column('PRINT_2', db.String(5))
    print_3 = db.Column('PRINT_3', db.String(5))
    print_4 = db.Column('PRINT_4', db.String(5))
    print_5 = db.Column('PRINT_5', db.String(5))
    print_6 = db.Column('PRINT_6', db.String(5))
    print_7 = db.Column('PRINT_7', db.String(5))
    print_8 = db.Column('PRINT_8', db.String(5))
    print_9 = db.Column('PRINT_9', db.String(5))
    a1 = db.Column('A1', db.Float(53))
    a2 = db.Column('A2', db.Float(53))
    a3 = db.Column('A3', db.Float(53))
    a4 = db.Column('A4', db.Float(53))
    a5 = db.Column('A5', db.Float(53))
    a6 = db.Column('A6', db.Float(53))
    a7 = db.Column('A7', db.Float(53))
    a8 = db.Column('A8', db.Float(53))
    a9 = db.Column('A9', db.Float(53))
    p1 = db.Column('P1', db.Float(53))
    p2 = db.Column('P2', db.Float(53))
    p3 = db.Column('P3', db.Float(53))
    p4 = db.Column('P4', db.Float(53))
    p5 = db.Column('P5', db.Float(53))
    p6 = db.Column('P6', db.Float(53))
    p7 = db.Column('P7', db.Float(53))
    p8 = db.Column('P8', db.Float(53))
    p9 = db.Column('P9', db.Float(53))
    title = db.Column('TITLE', db.String(256))
    let_style = db.Column('LET_STYLE', db.String(5))
    ref_artlo = db.Column('REF_ARTLO', db.String(5))
    artpag = db.Column('ARTPAG', db.String(3))
    artno = db.Column('ARTNO', db.String(5))
    artencl = db.Column('ARTENCL', db.String(1))
    ret_art = db.Column('RET_ART', db.String(1))
    reorder = db.Column('REORDER', db.String(1))
    cust_info = db.Column('CUST_INFO', db.String(95))
    locate = db.Column('LOCATE', db.String(15))
    set_1 = db.Column('SET_1', db.String(5))
    set_2 = db.Column('SET_2', db.String(5))
    set_3 = db.Column('SET_3', db.String(5))
    set_4 = db.Column('SET_4', db.String(5))
    pck_1 = db.Column('PCK_1', db.String(5))
    pck_2 = db.Column('PCK_2', db.String(5))
    pck_3 = db.Column('PCK_3', db.String(5))
    pck_4 = db.Column('PCK_4', db.String(5))
    s1 = db.Column('S1', db.Float(53))
    s2 = db.Column('S2', db.Float(53))
    s3 = db.Column('S3', db.Float(53))
    s4 = db.Column('S4', db.Float(53))
    u1 = db.Column('U1', db.Float(53))
    u2 = db.Column('U2', db.Float(53))
    u3 = db.Column('U3', db.Float(53))
    u4 = db.Column('U4', db.Float(53))
    artd_1 = db.Column('ARTD_1', db.Date)
    artd_2 = db.Column('ARTD_2', db.Date)
    artd_3 = db.Column('ARTD_3', db.Date)
    artd_4 = db.Column('ARTD_4', db.Date)
    artd_5 = db.Column('ARTD_5', db.Date)
    artd_6 = db.Column('ARTD_6', db.Date)
    artd_7 = db.Column('ARTD_7', db.Date)
    artd_8 = db.Column('ARTD_8', db.Date)
    artd_9 = db.Column('ARTD_9', db.Date)
    arto_1 = db.Column('ARTO_1', db.Date)
    arto_2 = db.Column('ARTO_2', db.Date)
    arto_3 = db.Column('ARTO_3', db.Date)
    arto_4 = db.Column('ARTO_4', db.Date)
    arto_5 = db.Column('ARTO_5', db.Date)
    arto_6 = db.Column('ARTO_6', db.Date)
    arto_7 = db.Column('ARTO_7', db.Date)
    arto_8 = db.Column('ARTO_8', db.Date)
    arto_9 = db.Column('ARTO_9', db.Date)
    lupd = db.Column('LUPD', db.Date)
    origpr = db.Column('ORIGPR', db.String(1))
    rush = db.Column('RUSH', db.Boolean())
    late = db.Column('LATE', db.Float(53))
    timeout = db.Column('TIMEOUT', db.String(8))
    timein = db.Column('TIMEIN', db.String(8))
    out = db.Column('OUT', db.Float(53))
    created_at = db.Column(db.DateTime, default=db.func.current_timestamp())
    updated_at = db.Column(db.DateTime, default=db.func.current_timestamp(), 
                          onupdate=db.func.current_timestamp())

    def __repr__(self):
        return f'<Order "{self.log}">'


class User(UserMixin, db.Model):
    id = db.Column(db.Integer, primary_key=True)
    username = db.Column(db.String(64), index=True, unique=True)
    email = db.Column(db.String(120), index=True, unique=True)
    password_hash = db.Column(db.String(128))
    created_at = db.Column(db.DateTime, default=db.func.current_timestamp())
    updated_at = db.Column(db.DateTime, default=db.func.current_timestamp(), 
                          onupdate=db.func.current_timestamp())

    def set_password(self, password):
        self.password_hash = generate_password_hash(password)

    def check_password(self, password):
        return check_password_hash(self.password_hash, password)

    def __repr__(self):
        return f'<User {self.username}>'


@login.user_loader
def load_user(id):
    from app.repositories.user_repository import UserRepository
    user_repository = UserRepository()
    return user_repository.get_by_id(int(id))
